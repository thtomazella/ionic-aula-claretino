<!-- HTML Solucao 01 checkbox com quebra>

<ion-header translucent="true">
  <ion-toolbar color="secondary">
    <ion-buttons  collapse="true" slot="end">
      <ion-button>Sair</ion-button>
    </ion-buttons>
    <ion-title>Teste de abertura</ion-title>
  </ion-toolbar>
</ion-header>

<ion-content [fullscreen]="true">


  <div class="ion-padding">
    <ion-button color="primary" expand=""(click)="btnClicked()">Primeiro BotÃ£o</ion-button>
    <ion-button color="primary"style="margin-left:70px;"(click)="btnClicked1()">Segundo BotÃ£o</ion-button>
    <br><br><br>
    <ion-button color="primary" expand="block" (click)="cadastrar()" >Clique aqui para cadastrar
      <ion-icon slot="start" name="star"></ion-icon>
    </ion-button>
    <br>
    <br>
    <!--ion-button color="primary" expand="block "(click)="mostrarComponente()">Aba</ion-button-->

    <ion-checkbox color="primary"></ion-checkbox>
    <ion-checkbox color="secondary"></ion-checkbox>
    <ion-checkbox color="danger"></ion-checkbox>
    <ion-checkbox color="light"></ion-checkbox>
    <ion-checkbox color="dark"></ion-checkbox>

    <ion-item>
      <ion-label>CHECK 1</ion-label>
      <ion-checkbox></ion-checkbox>
      <ion-label>CHECK 2</ion-label>
      <ion-checkbox></ion-checkbox>
      <ion-label>CHECK 3</ion-label>
      <ion-checkbox></ion-checkbox>
    </ion-item>



  </div>

  <ion-checkbox color="primary"></ion-checkbox>
<ion-checkbox color="secondary"></ion-checkbox>


<p>Checkbox List</p>
<ion-list>
  <ion-item *ngFor= "let variavelHomePageHTML of lanctoHomePageTS">
    <ion-label>{{variavelHomePageHTML.name}}</ion-label>
    <ion-checkbox slot="end" [(ngModel)]= "variavelHomePageHTML.isChecked"></ion-checkbox>
  </ion-item>
</ion-list>

</ion-content>

   <ion-footer>
    <ion-toolbar color="tertiary">
      <ion-title>Footer</ion-title>
    </ion-toolbar>
  </ion-footer>
  
  
  /* JS */
import { Component } from '@angular/core';
import { AlertController } from '@ionic/angular';
import { Alert } from 'selenium-webdriver';
import { ActionSheetController } from '@ionic/angular';


@Component({
  selector: 'app-home',
  templateUrl: 'home.page.html',
  styleUrls: ['home.page.scss'],
})
export class HomePage {

  lanctoHomePageTS = [
    {name: 'Teste List 1', isChecked: false},
    {name: 'Teste List 2', isChecked: true},
    {name: 'Teste List 3', isChecked: false},
    {name: 'Teste List 4', isChecked: true},
  ];

  constructor(
    // BUSCANDO O PACOTE DO IONIC
    private alertCtrl: AlertController,
    public actionSheetController: ActionSheetController
  ){};



  btnClicked(){
    console.log('BotÃ£o um foi clicado');
  }


  btnClicked1(){
    console.log('BotÃ£o dois foi clicado');
  }

  async cadastrar(){
    //CHAMANDO O ALERTCONTROLER
    //PASSAR ALGUMAS PROPRIEDADES
    const myAlert = await this.alertCtrl.create({
      header: 'Cadastro',



      //ADICIONANDO CAMPOS PARA DIGITAÃ‡ÃƒO
      inputs:[{
        name:'nome',
        placeholder:'Seu nome'
      },
      {
        name:'email',
        placeholder:'Seu e-mail',
        type:'email'
      },
      {
        name:'key',
        placeholder:'Informe a senha',
        type:'password'
      }

    ],

      // COLOCANDO INFORMAÃ‡Ã•ES PARA PEGAR AÃ‡Ã•ES DO BOTÃƒO

      buttons: [
        {
        text: 'OK',
        //PASSAR INFORMAÃ‡Ã•ES E EXIBIR
        handler: (data) => {console.log(data);}
      },
      {
        text: 'CANCELAR',
        handler: () => {console.log('CLICOU EM CANCELAR');}
      },
    ]
    });
    myAlert.present();
  }
  async mostrarComponente() {
    const actionSheet = await this.actionSheetController.create({
      header: 'Albums',
      cssClass: 'my-custom-class',
      buttons: [{
        text: 'Delete',
        role: 'destructive',
        icon: 'trash',
        id: 'delete-button',
        data: {
          type: 'delete'
        },
        handler: () => {
          console.log('Delete clicked');
        }
      }, {
        text: 'Share',
        icon: 'share',
        data: 10,
        handler: () => {
          console.log('Share clicked');
        }
      }, {
        text: 'Play (open modal)',
        icon: 'caret-forward-circle',
        data: 'Data value',
        handler: () => {
          console.log('Play clicked');
        }
      }, {
        text: 'Favorite',
        icon: 'heart',
        handler: () => {
          console.log('Favorite clicked');
        }
      }, {
        text: 'Cancel',
        icon: 'close',
        role: 'cancel',
        handler: () => {
          console.log('Cancel clicked');
        }
      }]
    });
    await actionSheet.present();
  }


}
